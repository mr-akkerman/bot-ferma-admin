#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app
from dashboard import get_dashboard_data

def test_dashboard():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞"""
    print("============================================================")
    print("  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ê–®–ë–û–†–î–ê")
    print("============================================================")
    
    with app.app_context():
        print("üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_dashboard_data()...")
        
        try:
            data = get_dashboard_data()
            
            print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(f"  - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {data['total_count']}")
            print(f"  - –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç (–¥–Ω–∏): {data['avg_age_days']}")
            print(f"  - –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–º–µ–Ω–æ–≤: {data['avg_domain_count']}")
            print(f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø: {len(data['groups_stats'])}")
            
            if data['groups_stats']:
                print("\nüìä –ì—Ä—É–ø–ø—ã:")
                for group in data['groups_stats']:
                    print(f"  - {group['party']}: {group['count']} –ø—Ä–æ—Ñ–∏–ª–µ–π, "
                          f"—Å—Ä.–≤–æ–∑—Ä–∞—Å—Ç {group['avg_age_days']} –¥–Ω–µ–π, "
                          f"—Å—Ä.–¥–æ–º–µ–Ω—ã {group['avg_domains']}")
            
            if data['total_count'] > 0:
                print("\n‚úÖ –î–∞—à–±–æ—Ä–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                return True
            else:
                print("\n‚ö†Ô∏è  –î–∞—à–±–æ—Ä–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω—É–ª–µ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
                return False
                
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞: {e}")
            import traceback
            print(f"‚ùå Traceback: {traceback.format_exc()}")
            return False

if __name__ == '__main__':
    success = test_dashboard()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω!")
        sys.exit(0)
    else:
        print("\nüí• –¢–µ—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        sys.exit(1)