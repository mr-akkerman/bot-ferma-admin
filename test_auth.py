"""–¢–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"""
import tempfile
import os
from werkzeug.security import generate_password_hash
from app import app, db
from models import User
from auth import login_user, logout_user, is_authenticated


def test_auth_functionality():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_fd, db_path = tempfile.mkstemp(suffix='.db')
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    app.config.update({
        'TESTING': True,
        'ADMIN_DATABASE_URI': f'sqlite:///{db_path}',
        'SQLALCHEMY_DATABASE_URI': f'sqlite:///{db_path}',
        'SQLALCHEMY_BINDS': {
            'sqlite': f'sqlite:///{db_path}',
            'postgres': app.config.get('PROFILES_DATABASE_URI', 'sqlite:///test.db')
        },
        'SECRET_KEY': 'test_secret_key'
    })
    
    try:
        with app.test_client() as client:
            with app.app_context():
                # –£–¥–∞–ª—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –∑–∞–Ω–æ–≤–æ
                db.drop_all(bind_key='sqlite')
                db.create_all(bind_key='sqlite')
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                test_user = User(
                    username='testuser',
                    password_hash=generate_password_hash('testpass')
                )
                db.session.add(test_user)
                db.session.commit()
                
                # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –±–µ–∑ –≤—Ö–æ–¥–∞
                response = client.get('/')
                assert is_authenticated() is False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –±–µ–∑ –≤—Ö–æ–¥–∞"
                
                # –¢–µ—Å—Ç 2: –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                result = login_user('testuser', 'testpass')
                assert result is True, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"
                assert is_authenticated() is True, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞"
                
                # –¢–µ—Å—Ç 3: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                logout_user()
                assert is_authenticated() is False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞"
                
                # –¢–µ—Å—Ç 4: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π username
                result = login_user('wronguser', 'testpass')
                assert result is False, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º username –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                assert is_authenticated() is False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞"
                
                # –¢–µ—Å—Ç 5: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
                result = login_user('testuser', 'wrongpass')
                assert result is False, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                assert is_authenticated() is False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞"
                
                # –¢–µ—Å—Ç 6: –†–∞–±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω–æ–º
                admin_user = User(
                    username='admin',
                    password_hash=generate_password_hash('admin')
                )
                db.session.add(admin_user)
                db.session.commit()
                
                result = login_user('admin', 'admin')
                assert result is True, "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ–π"
                assert is_authenticated() is True, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
                
                logout_user()
                assert is_authenticated() is False, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞"
                
                print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                
    finally:
        # –û—á–∏—Å—Ç–∫–∞
        os.close(db_fd)
        os.unlink(db_path)


def test_session_functionality():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏"""
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_fd, db_path = tempfile.mkstemp(suffix='.db')
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    app.config.update({
        'TESTING': True,
        'ADMIN_DATABASE_URI': f'sqlite:///{db_path}',
        'SQLALCHEMY_DATABASE_URI': f'sqlite:///{db_path}',
        'SQLALCHEMY_BINDS': {
            'sqlite': f'sqlite:///{db_path}',
            'postgres': app.config.get('PROFILES_DATABASE_URI', 'sqlite:///test.db')
        },
        'SECRET_KEY': 'test_secret_key'
    })
    
    try:
        with app.test_client() as client:
            with app.app_context():
                # –£–¥–∞–ª—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –∑–∞–Ω–æ–≤–æ
                db.drop_all(bind_key='sqlite')
                db.create_all(bind_key='sqlite')
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                test_user = User(
                    username='sessionuser',
                    password_hash=generate_password_hash('sessionpass')
                )
                db.session.add(test_user)
                db.session.commit()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ user_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–µ—Å—Å–∏–∏
                with client.session_transaction() as sess:
                    assert 'user_id' not in sess, "–°–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ"
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
                # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–µ—Å—Å–∏–∏
                response = client.get('/')
                
                # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
                login_user('sessionuser', 'sessionpass')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                assert is_authenticated() is True, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
                
                # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                logout_user()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
                assert is_authenticated() is False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞"
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–µ–π –Ω–∞–ø—Ä—è–º—É—é
                with client.session_transaction() as sess:
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º user_id –≤—Ä—É—á–Ω—É—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ is_authenticated
                    sess['user_id'] = test_user.id
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ is_authenticated —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º user_id
                response = client.get('/')
                assert is_authenticated() is True, "is_authenticated –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å True –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ user_id –≤ —Å–µ—Å—Å–∏–∏"
                
                print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–µ—Å—Å–∏–π –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                
    finally:
        # –û—á–∏—Å—Ç–∫–∞
        os.close(db_fd)
        os.unlink(db_path)


if __name__ == '__main__':
    test_auth_functionality()
    test_session_functionality()
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
